# Generics en Go
27 de Septiembre 2023

Agustin Luques
HomeVision
luquesagustin@gmail.com

Nicolás del Piano
HomeVision
ndel314@gmail.com

## Nosotros

- Software Engineers

.image assets/hv-logo.png 150 _
.caption [[https://homevision.co][HomeVision]]

- Experiencia en Go

.image assets/golang-logo.png 

## Agenda

1. Introducción
1. Sintaxis
1. Type Parameters in **Functions**
1. Constraints Literals
1. Constraints Package
1. Tilde (`~`)
1. Type Parameters in **Types**
1. Type Inference

## Introducción

Los _Generics_ fueron introducidos en Go `v1.18`

**Antes de Generics**

Se podia utilizar `interface{}` or `any`

.code presentation.go /^func PrintValue/,/^}/

## Sintaxis

## Sintaxis

Seccion de sintaxis

.code 01-basic/basic.go /^func GetStringFromInt\(a int\) string {$/,/^}/

## Sintaxis

Seccion de sintaxis

## Type Parameters in Functions

## Constraints Literals

.code 04-contraints-literals/literals.go /START1 OMIT/,/END1 OMIT/

## Constraints Literals

.code 04-contraints-literals/literals.go /START2 OMIT/,/END2 OMIT/

## Constraints Literals

.code 04-contraints-literals/literals.go /START3 OMIT/,/END3 OMIT/

## Constraints Literals

.code 04-contraints-literals/literals.go /START4 OMIT/,/END4 OMIT/

## Constraints Package

## Tilde (~)

## Type Parameters in Types

## Type Inference

Go puede inferir el tipo sin tener que especificarlo

**Partial inference**

.code 07-type-inference/inference.go

## Type Inference Advanced

## Known Issues

.code 09-common-struct-fields/common_fields.go 

## Known Issues

.image assets/github-issue-1.png _ 1000
.image assets/github-issue-2.png _ 1000
.caption [[https://github.com/golang/go/issues/48522][Github Issue]]

## Known Issues

.image assets/go-1.18-doc.png _ 1000
.caption [[https://go.dev/doc/go1.18][Go v1.18]]

## When to use Generics