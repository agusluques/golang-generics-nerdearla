package constraints

// ‚úèÔ∏è Ejercicio 1:
// - Generalizar la funcion "Suma" tal que podamos sumar todos los tipos num√©ricos
// de Go (ints y flotantes)
// - Verificar que los tests pasen
func Suma(a, b int) int {
	return a + b
}

// ‚úèÔ∏è Ejercicio 2:
// - Generalizar la funci√≥n "Min" tal que podamos utilizarla para todos los tipos
// num√©ricos y strings
// - Verificar que los tests pasen
func Min(a, b int) int {
	if a < b {
		return a
	}
	return b
}

// ‚úèÔ∏è Ejercicio 3:
// - Escribir la funci√≥n "GenMin" usando el paquete constraints para definir el
// type parameter
// - Verificar que los tests pasen
// üí° Puedes utilizar la intefaz `constraints.Ordered`
func GenMin(a, b int) int {
	if a < b {
		return a
	}
	return b
}
